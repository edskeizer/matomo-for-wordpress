# to override the environment, you can configure environment variables in a .env file saved in this directory.
# the following environment variables are supported:
#   - PHP_VERSION (defaults to 8.1, must be a version that has an official docker container available)
#   - BACKEND ('mariadb' or 'mysql', defaults to 'mariadb')
#   - WORDPRESS_VERSION (defaults to latest (defined below))
#   - PORT (the port to expose wordpress on, defaults to 3000)

services:
  # basic apache service
  wordpress:
    image: "php:${PHP_VERSION:-8.1}-apache"
    volumes:
      - ./docker/wordpress:/var/www/html
      - "./docker/php-${PHP_VERSION:-8.1}/php:/usr/src/php"
      - "./docker/php-${PHP_VERSION:-8.1}/extensions:/usr/local/lib/php/extensions"
      - "./docker/php-${PHP_VERSION:-8.1}/conf:/usr/local/etc/php/conf.d"
      - .:/var/www/html/matomo-for-wordpress
      - /var/www/html/matomo-for-wordpress/app/tmp
      - ./scripts/local-dev-entrypoint.sh:/usr/src/entrypoint.sh
    ports:
      - "${PORT:-3000}:80"
    environment:
      WP_DB_HOST: "${BACKEND:-mariadb}"
    entrypoint: /usr/src/entrypoint.sh
    depends_on:
      - "${BACKEND:-mariadb}"
    deploy:
      restart_policy:
        condition: on-failure

  # nginx service
  fpm:
    image: "php:${PHP_VERSION:-8.1}-fpm"
    volumes:
      - ./docker/wordpress:/var/www/html
      - "./docker/php-${PHP_VERSION:-8.1}/php:/usr/src/php"
      - "./docker/php-${PHP_VERSION:-8.1}/extensions:/usr/local/lib/php/extensions"
      - "./docker/php-${PHP_VERSION:-8.1}/conf:/usr/local/etc/php/conf.d"
      - .:/var/www/html/matomo-for-wordpress
      - /var/www/html/matomo-for-wordpress/app/tmp
      - ./scripts/local-dev-entrypoint.sh:/usr/src/entrypoint.sh
    environment:
      WP_DB_HOST: "${BACKEND:-mariadb}"
    entrypoint: /usr/src/entrypoint.sh
    depends_on:
      - "${BACKEND:-mariadb}"
    deploy:
      restart_policy:
        condition: on-failure
  nginx:
    image: nginx
    volumes:
      - ./scripts/local-dev-nginx.conf:/etc/nginx/conf.d/default.conf
      - ./docker/wordpress:/var/www/html
      - .:/var/www/html/matomo-for-wordpress
      - /var/www/html/matomo-for-wordpress/app/tmp
    depends_on:
      - fpm
    ports:
      - "${PORT:-3000}:80"
    deploy:
      restart_policy:
        condition: on-failure

  # service for running wp-cli
  wp:
    image: "php:${PHP_VERSION:-8.1}-apache"
    volumes:
      - ./docker/wordpress:/var/www/html
      - "./docker/php-${PHP_VERSION:-8.1}/php:/usr/src/php"
      - "./docker/php-${PHP_VERSION:-8.1}/extensions:/usr/local/lib/php/extensions"
      - "./docker/php-${PHP_VERSION:-8.1}/conf:/usr/local/etc/php/conf.d"
      - .:/var/www/html/matomo-for-wordpress
      - /var/www/html/matomo-for-wordpress/app/tmp
    ports:
      - "${PORT:-3000}:80"
    environment:
      WP_DB_HOST: "${BACKEND:-mariadb}"
    user: "${UID:-1000}:${GID:-1000}"
    entrypoint: "/var/www/html/wp-cli.phar --path=/var/www/html/${WORDPRESS_VERSION:-6.3.1}"
    depends_on:
      - "${BACKEND:-mariadb}"

  # database service definitions
  mariadb:
    image: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: pass
    volumes:
      - ./docker/mariadb:/var/lib/mysql:delegated
      - ./docker/maria_custom_my.cnf:/etc/mysql/conf.d/mycustom.cnf
    deploy:
      restart_policy:
        condition: on-failure
  mysql:
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: pass
    volumes:
      - ./docker/mysql:/var/lib/mysql:delegated
      - ./docker/container-files/mysql_custom_my.cnf:/etc/mysql/conf.d/mycustom.cnf
    deploy:
      restart_policy:
        condition: on-failure
